@page
@model IndexModel
@{
    ViewData["Title"] = "Chat";
}

<div class="chatHistory" id="chatHistory"></div>

<div class="input-group mb-3 chatInputContainer" id="chatInputWrapper">
    <input type="text" id="chatInput" class="form-control" placeholder="" aria-label="Type your query here" aria-describedby="basic-addon2">
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" type="button" id="chatInputSubmit">Send</button>
    </div>
</div>

@section Scripts {
    <script>
        let charBubbleToRemove = null;
        let chatInput = document.getElementById("chatInput");
        let chatInputWrapper = document.getElementById("chatInputWrapper");
        let chatInputSubmit = document.getElementById("chatInputSubmit");
        let chatHistory = document.getElementById("chatHistory");

        const createChatBubble = (text, type) => {
            let chatBubble = document.createElement("div");
            chatBubble.classList.add("chatBubble");
            chatBubble.classList.add(type);
            chatBubble.innerText = text;
            chatHistory.appendChild(chatBubble);

            chatInputWrapper.scrollIntoView({ behavior: "smooth" });
            return chatBubble;
        }


        chatInput.addEventListener("keyup", function (event) {
            event.preventDefault();
            if (event.keyCode === 13) {
                chatInputSubmit.click();
            }
        });
        chatInputSubmit.addEventListener("click", function (event) {
            event.preventDefault();
            let chatText = chatInput.value;
            if (chatInput != "") {
                createChatBubble(chatText, "chatBubbleUser");
                charBubbleToRemove = createChatBubble("...", "chatBubbleAI");
                const json = {
                    "text": chatText,
                };
                fetch("/api/chat",
                    {
                        method: "POST",
                        body: JSON.stringify(json),
                        headers: {
                            "Content-Type": "application/json"
                        }
                    })
                    .then(response => {
                        return response.json();
                    })
                    .then(data => {
                        chatHistory.removeChild(charBubbleToRemove);
                        charBubbleToRemove = null;
                        createChatBubble(data.text, "chatBubbleAI");
                    })
                    .catch(error => {
                        console.log(error);
                        chatHistory.removeChild(charBubbleToRemove);
                        charBubbleToRemove = null;
                        createChatBubble(error, "chatBubbleError");
                    });
                chatInput.value = "";
            }
        });

        chatInput.focus();
    </script>
}
